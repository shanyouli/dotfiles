{
  config,
  options,
  pkgs,
  lib,
  my,
  ...
}:
with lib;
with my;
let
  cfg = config.modules.tmux;
  cft = config.modules.themes;
in
{
  options.modules.tmux = with types; {
    enable = mkBoolOpt false;
    rcFiles = mkOpt (listOf (either str path)) [ ];
    service.enable = mkBoolOpt cfg.enable;
    service.startup = mkBoolOpt false;
  };

  config = mkIf cfg.enable {
    home.packages = with pkgs; [ tmux ];

    modules.shell.zsh.pluginFiles = [ "tmux/tmux.plugin.zsh" ];

    home.configFile = {
      "tmux" = {
        source = "${my.dotfiles.config}/tmux";
        recursive = true;
      };
      "tmux/extraInit" = {
        text =
          let
            theme = optionalString (cft.default == "") ''
              set -g @tmux_power_theme 'gold'
              run-shell '${pkgs.tmuxPlugins.power-theme}/share/tmux-plugins/power/tmux-power.tmux'
            '';
          in
          ''
            #!/usr/bin/env bash
            # This file is auto-generated by nixos, don't edit by hand!
            ${concatMapStrings (path: ''
              source-file '${path}'
            '') cfg.rcFiles}

            ${theme}
            set -g @tmux_power_prefix_highlight_pos 'L'
            run-shell '${pkgs.tmuxPlugins.prefix-highlight}/share/tmux-plugins/prefix-highlight/prefix_highlight.tmux'

            # 复制，快捷按键 prefix </>
            run-shell '${pkgs.tmuxPlugins.copycat}/share/tmux-plugins/copycat/copycat.tmux'
            run-shell '${pkgs.tmuxPlugins.yank}/share/tmux-plugins/yank/yank.tmux'

            # prefix <tab>, selection, <tab> insert <enter> copy
            run-shell '${pkgs.tmuxPlugins.extrakto}/share/tmux-plugins/extrakto/extrakto.tmux'

            # tmux copy toolkit 配置
            set -g @copytk-quickopen-env-file '${config.home.cacheDir}/tmux-copytk-env'
            run-shell '${pkgs.tmuxPlugins.copy-toolkit}/share/tmux-plugins/copy-toolkit/copytk.tmux'
            bind-key -T prefix l run-shell -b "pythons ${pkgs.tmuxPlugins.copy-toolkit}/share/tmux-plugins/copy-toolkit/copytk.py linecopy"

            # tmux 会话自动保存，配合 continuum 自动恢复会话
            set -g @resurrect-dir '${config.home.cacheDir}/tmux-resurrect'
            set -g @resurrect-processes 'btm ssh sqlite3 "git log" nu'
            run-shell '${pkgs.tmuxPlugins.resurrect}/share/tmux-plugins/resurrect/resurrect.tmux'

            set -g @continuum-restore 'on'
            run-shell '${pkgs.tmuxPlugins.continuum}/share/tmux-plugins/continuum/continuum.tmux'
            # 设置默认的 shell
            run-shell "tmux set-option -g default-shell $(which ${config.modules.shell.default})"
          ''
          + optionalString config.modules.gui.terminal.kitty.enable ''
            # when using kitty, @see https://mbuffett.com/posts/setting-up-tmux-and-kitty-for-true-color-support/
            set-option -ga terminal-overrides ",xterm-kitty:RGB"
            set-option -sa terminal-features ",xterm-kitty:RGB"
          '';
        executable = true;
      };
    };
    env.TMUX_HOME = "$XDG_CONFIG_HOME/tmux";
  };
}
